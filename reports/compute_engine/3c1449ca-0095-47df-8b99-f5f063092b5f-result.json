{"name": "Labels Test Case - de0360-pkce-rubix-cl-dev000", "status": "failed", "statusDetails": {"message": "AssertionError: Instances missing required labels: cl-bastion-host\nassert False\n +  where False = all([True, True, True, True, True, True, ...])", "trace": "self = <api_tests.test_compute_engine.TestComputeEngine object at 0x11db58f90>\nproject_vm_instances = [('de0360-pkce-rubix-cl-dev000', ListPager<id: \"projects/de0360-pkce-rubix-cl-dev000/zones/europe-west3-a/instances\"\ni...f_link: \"https://www.googleapis.com/compute/v1/projects/de0360-pkce-rubix-cl-uat000/zones/europe-west3-a/instances\"\n>)]\n\n    @allure.story(\"Verify labels are attached to every Compute Engine VM Resource\")\n    @pytest.mark.parametrize(\"project_vm_instances\", [(p[\"project_id\"],) for p in config[\"projects\"]], indirect=True)\n    @pytest.mark.severity(\"Medium\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.smoke(\"Smoke\")\n    @allure.label(\"Suite\", \"Smoke\")\n    @allure.label(\"Severity\", \"Medium\")\n    def test_labels_attached(self, project_vm_instances):\n        for project_id, instances in project_vm_instances:\n            if not instances:\n                continue\n    \n            missing_labels_instances = []  # Instances missing required labels\n    \n            for instance in instances:\n                test_case_name = f\"Labels Test Case - {project_id}\"\n                allure.dynamic.title(test_case_name)\n    \n                assert_value = next(p[\"labels_assertion\"] for p in config[\"projects\"] if p[\"project_id\"] == project_id)\n                labels = instance.labels.items if instance.labels else None\n                assert_result = (labels is not None) == assert_value\n    \n                with allure.step(f\"Check Labels for VM instance {instance.name} in project {project_id}\"):\n                    if assert_result:\n                        allure.dynamic.label(\"result\", \"passed\")\n                        print(f\"Labels found for VM instance {instance.name} in project {project_id}\")\n                    else:\n                        allure.dynamic.label(\"result\", \"failed\")\n                        print(f\"No Labels found for VM instance {instance.name} in project {project_id}\")\n                        missing_labels_instances.append(instance.name)\n    \n            # Generate a title based on assertion results\n            if not missing_labels_instances:\n                title = \"All instances have required labels attached\"\n            else:\n                title = f\"Instances missing required labels: {', '.join(missing_labels_instances)}\"\n    \n            # Raise an assertion error if any instance failed the assertion\n>           assert all([(labels is not None) == assert_value for labels in\n                        [instance.labels.items if instance.labels else None for instance in instances]]), title\nE           AssertionError: Instances missing required labels: cl-bastion-host\nE           assert False\nE            +  where False = all([True, True, True, True, True, True, ...])\n\napi_tests/test_compute_engine.py:134: AssertionError"}, "steps": [{"name": "Check Labels for VM instance cdp-rubix-dev-eagle-m in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691150167044, "stop": 1691150167044}, {"name": "Check Labels for VM instance cdp-rubix-dev-eagle-w-0 in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691150167044, "stop": 1691150167044}, {"name": "Check Labels for VM instance cdp-rubix-dev-eagle-w-1 in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691150167044, "stop": 1691150167044}, {"name": "Check Labels for VM instance cdp-rubix-dev-m in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691150167044, "stop": 1691150167044}, {"name": "Check Labels for VM instance cdp-rubix-dev-w-0 in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691150167044, "stop": 1691150167044}, {"name": "Check Labels for VM instance cdp-rubix-dev-w-1 in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691150167045, "stop": 1691150167045}, {"name": "Check Labels for VM instance cl-bastion-host in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691150167045, "stop": 1691150167045}], "parameters": [{"name": "project_vm_instances", "value": "('de0360-pkce-rubix-cl-dev000',)"}], "start": 1691150167043, "stop": 1691150167045, "uuid": "114ef7e6-8a9d-4d0d-ae79-73bd81338b91", "historyId": "010fb26dd4e24ba17b57b471026ab133", "testCaseId": "83f495980c525f82b80ed3872a5aaf4c", "fullName": "api_tests.test_compute_engine.TestComputeEngine#test_labels_attached", "labels": [{"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "failed"}, {"name": "Suite", "value": "Smoke"}, {"name": "feature", "value": "Compute Engine"}, {"name": "severity", "value": "normal"}, {"name": "Severity", "value": "Medium"}, {"name": "story", "value": "Verify labels are attached to every Compute Engine VM Resource"}, {"name": "tag", "value": "smoke('Smoke')"}, {"name": "tag", "value": "severity('Medium')"}, {"name": "parentSuite", "value": "api_tests"}, {"name": "suite", "value": "test_compute_engine"}, {"name": "subSuite", "value": "TestComputeEngine"}, {"name": "host", "value": "192.168.1.11"}, {"name": "thread", "value": "40390-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "api_tests.test_compute_engine"}]}