{"name": "de0360-pkce-rubix-cl-dev000 - Labels Test Case", "status": "failed", "statusDetails": {"message": "AssertionError: Instances missing required labels: cl-bastion-host\nassert False\n +  where False = all([True, True, True, True, True, True, ...])", "trace": "self = <api_tests.test_rough.TestComputeEngine object at 0x11294d590>\nproject_vm_instances = [('de0360-pkce-rubix-cl-dev000', ListPager<id: \"projects/de0360-pkce-rubix-cl-dev000/zones/europe-west3-a/instances\"\ni...f_link: \"https://www.googleapis.com/compute/v1/projects/de0360-pkce-rubix-cl-uat000/zones/europe-west3-a/instances\"\n>)]\n\n    @allure.story(\"Verify labels are attached to every Compute Engine VM Resource\")\n    @pytest.mark.parametrize(\"project_vm_instances\", [(p[\"project_id\"],) for p in config[\"projects\"]], indirect=True)\n    def test_labels_attached(self, project_vm_instances):\n        for project_id, instances in project_vm_instances:\n            if not instances:\n                continue\n    \n            missing_labels_instances = []  # Instances missing required labels\n    \n            for instance in instances:\n                test_case_name = f\"{project_id} - Labels Test Case\"\n                allure.dynamic.title(test_case_name)\n    \n                assert_value = next(p[\"labels_assertion\"] for p in config[\"projects\"] if p[\"project_id\"] == project_id)\n                labels = instance.labels.items if instance.labels else None\n                assert_result = (labels is not None) == assert_value\n    \n                with allure.step(f\"Check Labels for VM instance {instance.name} in project {project_id}\"):\n                    if assert_result:\n                        allure.dynamic.label(\"result\", \"passed\")\n                        print(f\"Labels found for VM instance {instance.name} in project {project_id}\")\n                    else:\n                        allure.dynamic.label(\"result\", \"failed\")\n                        print(f\"No Labels found for VM instance {instance.name} in project {project_id}\")\n                        missing_labels_instances.append(instance.name)\n    \n            # Generate a title based on assertion results\n            if not missing_labels_instances:\n                title = \"All instances have required labels attached\"\n            else:\n                title = f\"Instances missing required labels: {', '.join(missing_labels_instances)}\"\n    \n            # Raise an assertion error if any instance failed the assertion\n>           assert all([(labels is not None) == assert_value for labels in\n                        [instance.labels.items if instance.labels else None for instance in instances]]), title\nE           AssertionError: Instances missing required labels: cl-bastion-host\nE           assert False\nE            +  where False = all([True, True, True, True, True, True, ...])\n\napi_tests/test_rough.py:148: AssertionError"}, "steps": [{"name": "Check Labels for VM instance cdp-rubix-dev-eagle-m in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691138633349, "stop": 1691138633349}, {"name": "Check Labels for VM instance cdp-rubix-dev-eagle-w-0 in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691138633349, "stop": 1691138633349}, {"name": "Check Labels for VM instance cdp-rubix-dev-eagle-w-1 in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691138633349, "stop": 1691138633349}, {"name": "Check Labels for VM instance cdp-rubix-dev-m in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691138633349, "stop": 1691138633349}, {"name": "Check Labels for VM instance cdp-rubix-dev-w-0 in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691138633349, "stop": 1691138633349}, {"name": "Check Labels for VM instance cdp-rubix-dev-w-1 in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691138633349, "stop": 1691138633349}, {"name": "Check Labels for VM instance cl-bastion-host in project de0360-pkce-rubix-cl-dev000", "status": "passed", "start": 1691138633349, "stop": 1691138633349}], "attachments": [{"name": "stdout", "source": "24b4b0ec-ed3b-4840-bdd8-02df6f5f8491-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "project_vm_instances", "value": "('de0360-pkce-rubix-cl-dev000',)"}], "start": 1691138633348, "stop": 1691138633350, "uuid": "52e243dc-8be3-4898-80b2-f7b9968f19af", "historyId": "c16cd83080eecb77790258c0e6abe45e", "testCaseId": "c4644b22b932752c2f686945bf8a1453", "fullName": "api_tests.test_rough.TestComputeEngine#test_labels_attached", "labels": [{"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "passed"}, {"name": "result", "value": "failed"}, {"name": "story", "value": "Verify labels are attached to every Compute Engine VM Resource"}, {"name": "feature", "value": "Compute Engine"}, {"name": "parentSuite", "value": "api_tests"}, {"name": "suite", "value": "test_rough"}, {"name": "subSuite", "value": "TestComputeEngine"}, {"name": "host", "value": "192.168.1.11"}, {"name": "thread", "value": "20493-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "api_tests.test_rough"}]}